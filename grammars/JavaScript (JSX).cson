name: "JavaScript (JSX)"
scopeName: "source.js.jsx"
fileTypes: [
	"jsx",
	"react.js"
]
patterns: [
	{
		include: "#pcdata"
	}
	{
		include: "#literal-jsx"
	}
	{
		include: "source.js"
	}
]
repository:
	pcdata:
		patterns: [
			{
				include: "#pcdata-quotes"
			}
		]
	"pcdata-quotes":
		name: "meta.other.pcdata.js"
		match: "\\b\\w+[\"]\\w+\\b"
	"literal-jsx":
		contentName: "meta.jsx.js"
		begin: "(?<=\\(|\\{|\\[|,|&&|\\|\\||\\?|:|=|=>|\\Wreturn|^return|^)(?=\\s*<[_$a-zA-Z])"
		end: "(?<=/>|>)"
		patterns: [
			{
				include: "#jsx-tag-start"
			}
		]
	"jsx-tag-start":
		patterns: [
			{
				begin: "(<)([_$a-zA-Z][-$:.\\w]*[$\\w]*)"
				beginCaptures:
					"1":
						name: "punctuation.definition.tag.begin.jsx"
					"2":
						name: "entity.name.tag.jsx"
				end: "(</)(\\2)(>)|(/>)"
				endCaptures:
					"1":
						name: "punctuation.definition.tag.begin.jsx"
					"2":
						name: "entity.name.tag.jsx"
					"3":
						name: "punctuation.definition.tag.end.jsx"
					"4":
						name: "punctuation.definition.tag.end.jsx"
				patterns: [
					{
						include: "#jsx-tag-end"
					}
					{
						include: "#jsx-attributes"
					}
				]
			}
			{
				name: "invalid.illegal.tag.incomplete.jsx"
				match: "<"
			}
		]
	"jsx-tag-end":
		begin: ">"
		beginCaptures:
			"0":
				name: "punctuation.definition.tag.end.jsx"
		end: "(?=</)"
		patterns: [
			{
				include: "#jsx-tag-start"
			}
			{
				include: "#jsx-evaluated-code"
			}
			{
				include: "#jsx-entities"
			}
		]
	"jsx-attributes":
		patterns: [
			{
				include: "#jsx-attribute-name"
			}
			{
				include: "#jsx-attribute-assignment"
			}
			{
				include: "#jsx-string-quoted"
			}
			{
				include: "#jsx-evaluated-code"
			}
			{
				include: "#comments"
			}
		]
	"jsx-attribute-name":
		name: "entity.other.attribute-name.jsx"
		match: "[_$a-zA-Z][-$\\w]*"
	"jsx-attribute-assignment":
		name: "keyword.operator.assignment.jsx"
		match: "="
	"jsx-evaluated-code":
		name: "meta.embedded.expression.jsx"
		begin: "{"
		beginCaptures:
			"0":
				name: "punctuation.section.embedded.begin.jsx"
		end: "}"
		endCaptures:
			"0":
				name: "punctuation.section.embedded.end.jsx"
		patterns: [
			{
				include: "#expression"
			}
		]
	"jsx-string-quoted":
		name: "string.quoted.jsx"
		begin: "([\"'])"
		beginCaptures:
			"0":
				name: "punctuation.definition.string.begin.jsx"
		end: "\\1"
		endCaptures:
			"0":
				name: "punctuation.definition.string.end.jsx"
		patterns: [
			{
				include: "#jsx-entities"
			}
		]
	"jsx-entities":
		patterns: [
			{
				name: "constant.character.entity.jsx"
				match: "&(?:[a-zA-Z0-9]+|#\\d+|#x\\h+);"
			}
			{
				name: "invalid.illegal.bad-ampersand.jsx"
				match: "&\\S*;"
			}
		]
